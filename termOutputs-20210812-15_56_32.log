12-Aug-2021 15:56:32
02jp already downloaded from https://doi.org/10.5281/zenodo.5183028
03sk already downloaded from https://doi.org/10.5281/zenodo.5183028
04sp already downloaded from https://doi.org/10.5281/zenodo.5183028
05bm already downloaded from https://doi.org/10.5281/zenodo.5183028
06sb already downloaded from https://doi.org/10.5281/zenodo.5183028
07bj already downloaded from https://doi.org/10.5281/zenodo.5183028
02jp: loading time-series
02jp: extracting responses (sess1/2)
02jp: extracting responses (sess2/2)
02jp: saving responses
02jp: saved to C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\resp\02jp.mat
02jp: saving detrended timeseries
02jp: saved to 'C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\02jp_dDtrd.mat'
03sk: loading time-series
03sk: extracting responses (sess1/2)
03sk: extracting responses (sess2/2)
03sk: saving responses
03sk: saved to C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\resp\03sk.mat
03sk: saving detrended timeseries
03sk: saved to 'C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\03sk_dDtrd.mat'
04sp: loading time-series
04sp: extracting responses (sess1/2)
04sp: extracting responses (sess2/2)
04sp: saving responses
04sp: saved to C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\resp\04sp.mat
04sp: saving detrended timeseries
04sp: saved to 'C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\04sp_dDtrd.mat'
05bm: loading time-series
05bm: extracting responses (sess1/2)
05bm: extracting responses (sess2/2)
05bm: saving responses
05bm: saved to C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\resp\05bm.mat
05bm: saving detrended timeseries
05bm: saved to 'C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\05bm_dDtrd.mat'
06sb: loading time-series
06sb: extracting responses (sess1/2)
06sb: extracting responses (sess2/2)
06sb: saving responses
06sb: saved to C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\resp\06sb.mat
06sb: saving detrended timeseries
06sb: saved to 'C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\06sb_dDtrd.mat'
07bj: loading time-series
07bj: extracting responses (sess1/2)
07bj: extracting responses (sess2/2)
07bj: saving responses
07bj: saved to C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\resp\07bj.mat
07bj: saving detrended timeseries
07bj: saved to 'C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\07bj_dDtrd.mat'
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\doIt.m',18,1)">18  </a>p.featSel.fov.resFile = processFov(p);
p.featSel.fov.resFile = processFov(p);
02jp: loading responses
03sk: loading responses
04sp: loading responses
05bm: loading responses
06sb: loading responses
07bj: loading responses
responses loaded
-----------------------
empiricalFov: Computing
flattening ecc distributions
preparing delay maps
02jp,sess1: refining fov contour
02jp,sess2: refining fov contour
03sk,sess1: refining fov contour
03sk,sess2: refining fov contour
04sp,sess1: refining fov contour
04sp,sess2: refining fov contour
05bm,sess1: refining fov contour
05bm,sess2: refining fov contour
06sb,sess1: refining fov contour
06sb,sess2: refining fov contour
07bj,sess1: refining fov contour
07bj,sess2: refining fov contour
{Output argument "fAll" (and maybe others) not assigned
during call to "processFov>empiricalFov".

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('processFov', 'C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m', 21)" style="font-weight:bold">processFov</a> (<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',21,0)">line 21</a>)
[featSel_areaAndFov,cont,voxProp,pEmpirical,fAll,f] =
empiricalFov(d,p);
} 
opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',21,0)
p.featSel.fov.resFile = processFov(p);
02jp: loading responses
03sk: loading responses
04sp: loading responses
05bm: loading responses
06sb: loading responses
07bj: loading responses
responses loaded
-----------------------
empiricalFov: Computing
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',21,1)">21  </a>[featSel_areaAndFov,cont,voxProp,pEmpirical,fAll,f] = empiricalFov(d,p);
[featSel_areaAndFov,cont,voxProp,pEmpirical,fAll,f] = empiricalFov(d,p);
flattening ecc distributions
preparing delay maps
02jp,sess1: refining fov contour
02jp,sess2: refining fov contour
03sk,sess1: refining fov contour
03sk,sess2: refining fov contour
04sp,sess1: refining fov contour
04sp,sess2: refining fov contour
05bm,sess1: refining fov contour
05bm,sess2: refining fov contour
06sb,sess1: refining fov contour
06sb,sess2: refining fov contour
07bj,sess1: refining fov contour
07bj,sess2: refining fov contour
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',181,1)">181 </a>fIndList = [1 2 4 7 9 10];
fIndList = [1 2 4 7 9 10];
supTitleList = {'removing small islands' '1st contours' '1st contours processing' '2nd contours' '2nd contours processing' 'Final contours'};
fAll = cell(size(fIndList));
for i = 1:length(fIndList)
    fInd = fIndList(i);
    fAll{i} = figure('WindowStyle','docked');
    [ha, pos] = tight_subplot(size(d,2), size(d,1)*2, 0, 0.1, 0); delete(ha);
    for subjInd = 1:size(d,1)
        for sessInd = 1:size(d,2)
            hemi = 'L';
            ax.(hemi) = copyobj(f.(hemi){subjInd,sessInd}(fInd).Children,fAll{i});
            ax.(hemi).DataAspectRatioMode = 'auto';
            ax.(hemi).PlotBoxAspectRatioMode = 'auto';
            ax.(hemi).Position = pos{(sessInd-1)*(size(d,1)*2)+(subjInd*2-1)};
            ax.(hemi).Colormap = f.(hemi){subjInd,sessInd}(fInd).Children.Colormap;
            drawnow
            
            hemi = 'R';
            ax.(hemi) = copyobj(f.(hemi){subjInd,sessInd}(fInd).Children,fAll{i});
            ax.(hemi).DataAspectRatioMode = 'auto';
            ax.(hemi).PlotBoxAspectRatioMode = 'auto';
            ax.(hemi).Position = pos{(sessInd-1)*(size(d,1)*2)+(subjInd*2-1)+1};
            ax.(hemi).Colormap = f.(hemi){subjInd,sessInd}(fInd).Children.Colormap;
            drawnow
            
            yLim = [-1 1].*max(abs([ax.L.YLim ax.R.YLim ax.L.XLim(1) ax.R.XLim(2)]));
            xLim = yLim(2);
            ax.L.YLim = yLim;
            ax.R.YLim = yLim;
            ax.L.XLim = [-xLim 0];
            ax.R.XLim = [0 xLim];
            drawnow
            
            ax.L.PlotBoxAspectRatio = [0.5 1 1];
            ax.R.PlotBoxAspectRatio = [0.5 1 1];
            
            ax.L.YAxis.Visible = 'off';
            ax.R.YAxis.Visible = 'off';
        end
    end
    sgtitle(supTitleList{i})
end
{Unrecognized function or variable 'tight_subplot'.
} 
addpath(genpath(fullfile(matDependencyPath)));
{Unrecognized function or variable 'matDependencyPath'.
} 
matDependencyPath = fullfile(p.wd,'matlabFileEx'); if ~exist(matDependencyPath,'dir'); mkdir(matDependencyPath); end
addpath(genpath(fullfile(matDependencyPath)));
fIndList = [1 2 4 7 9 10];
supTitleList = {'removing small islands' '1st contours' '1st contours processing' '2nd contours' '2nd contours processing' 'Final contours'};
fAll = cell(size(fIndList));
for i = 1:length(fIndList)
    fInd = fIndList(i);
    fAll{i} = figure('WindowStyle','docked');
    [ha, pos] = tight_subplot(size(d,2), size(d,1)*2, 0, 0.1, 0); delete(ha);
    for subjInd = 1:size(d,1)
        for sessInd = 1:size(d,2)
            hemi = 'L';
            ax.(hemi) = copyobj(f.(hemi){subjInd,sessInd}(fInd).Children,fAll{i});
            ax.(hemi).DataAspectRatioMode = 'auto';
            ax.(hemi).PlotBoxAspectRatioMode = 'auto';
            ax.(hemi).Position = pos{(sessInd-1)*(size(d,1)*2)+(subjInd*2-1)};
            ax.(hemi).Colormap = f.(hemi){subjInd,sessInd}(fInd).Children.Colormap;
            drawnow
            
            hemi = 'R';
            ax.(hemi) = copyobj(f.(hemi){subjInd,sessInd}(fInd).Children,fAll{i});
            ax.(hemi).DataAspectRatioMode = 'auto';
            ax.(hemi).PlotBoxAspectRatioMode = 'auto';
            ax.(hemi).Position = pos{(sessInd-1)*(size(d,1)*2)+(subjInd*2-1)+1};
            ax.(hemi).Colormap = f.(hemi){subjInd,sessInd}(fInd).Children.Colormap;
            drawnow
            
            yLim = [-1 1].*max(abs([ax.L.YLim ax.R.YLim ax.L.XLim(1) ax.R.XLim(2)]));
            xLim = yLim(2);
            ax.L.YLim = yLim;
            ax.R.YLim = yLim;
            ax.L.XLim = [-xLim 0];
            ax.R.XLim = [0 xLim];
            drawnow
            
            ax.L.PlotBoxAspectRatio = [0.5 1 1];
            ax.R.PlotBoxAspectRatio = [0.5 1 1];
            
            ax.L.YAxis.Visible = 'off';
            ax.R.YAxis.Visible = 'off';
        end
    end
    sgtitle(supTitleList{i})
end
dbquit
[featSel_areaAndFov,cont,voxProp,pEmpirical,fAll,f] = empiricalFov(d,p);
flattening ecc distributions
preparing delay maps
02jp,sess1: refining fov contour
02jp,sess2: refining fov contour
03sk,sess1: refining fov contour
03sk,sess2: refining fov contour
04sp,sess1: refining fov contour
04sp,sess2: refining fov contour
05bm,sess1: refining fov contour
05bm,sess2: refining fov contour
06sb,sess1: refining fov contour
06sb,sess2: refining fov contour
07bj,sess1: refining fov contour
07bj,sess2: refining fov contour
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',181,1)">181 </a>fIndList = [1 2 4 7 9 10];
if system_dependent('IsDebugMode')==1, dbstep out; end
p

p = 

  <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> with fields:

            wd: 'C:\Users\el_ba\Documents\GitHub\HRdelay'
         anaID: '2021-08-11'
      dataPath: [1×1 struct]
     figOption: [1×1 struct]
    termOption: [1×1 struct]
          perm: [1×1 struct]
          boot: [1×1 struct]
          meta: [1×1 struct]
           fov: [1×1 struct]

p.figOption

ans = 

  <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> with fields:

      outDir: 'C:\Users\el_ba\Documents\GitHub\HRdelay\figures\2021-08-11'
     verbose: 0
        save: 1
     subjInd: 2
     sessInd: 1
     condInd: 1
    sliceInd: 7

p.figOption.verbose

ans =

     0

fAll{i} = figure('WindowStyle','docked','visible','on');
{Unrecognized function or variable 'i'.
} 
i = 1

i =

     1

fIndList = [1 2 4 7 9 10];
fAll{i} = figure('WindowStyle','docked','visible','on');
fAll{i} = figure('WindowStyle','docked','visible','off');
edit matlabFun\empiricalFov
dbquit
p.featSel.fov.resFile = processFov(p);
02jp: loading responses
03sk: loading responses
04sp: loading responses
05bm: loading responses
06sb: loading responses
07bj: loading responses
responses loaded
-----------------------
empiricalFov: Computing
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',21,1)">21  </a>[featSel_areaAndFov,cont,voxProp,pEmpirical,fAll,f] = empiricalFov(d,p);
close all
[featSel_areaAndFov,cont,voxProp,pEmpirical,fAll,f] = empiricalFov(d,p);
flattening ecc distributions
preparing delay maps
02jp,sess1: refining fov contour
02jp,sess2: refining fov contour
03sk,sess1: refining fov contour
03sk,sess2: refining fov contour
04sp,sess1: refining fov contour
04sp,sess2: refining fov contour
05bm,sess1: refining fov contour
05bm,sess2: refining fov contour
06sb,sess1: refining fov contour
06sb,sess2: refining fov contour
07bj,sess1: refining fov contour
07bj,sess2: refining fov contour
close all
[featSel_areaAndFov,cont,voxProp,pEmpirical,fAll,f] = empiricalFov(d,p);
flattening ecc distributions
preparing delay maps
02jp,sess1: refining fov contour
02jp,sess2: refining fov contour
03sk,sess1: refining fov contour
03sk,sess2: refining fov contour
04sp,sess1: refining fov contour
04sp,sess2: refining fov contour
05bm,sess1: refining fov contour
05bm,sess2: refining fov contour
06sb,sess1: refining fov contour
06sb,sess2: refining fov contour
07bj,sess1: refining fov contour
07bj,sess2: refining fov contour
doWhat = 'run';
% 'run' -> run it yourself (quite long)
% 'download' -> download precomputed data from repository
% 'run_forced' -> same as above, but forces to rerun instead of loading
% locally saved data
% 'download_forced' -> same as above, but forces to redownload instead of loading
% locally saved data
disp(['empiricalFov: saving to ' filePath])
{Unrecognized function or variable 'filePath'.
} 
p.wd

ans =

    'C:\Users\el_ba\Documents\GitHub\HRdelay'

fullfile(p.wd,'V1','fov')

ans =

    'C:\Users\el_ba\Documents\GitHub\HRdelay\V1\fov'

fullfile(p.wd,'V1','fov')

ans =

    'C:\Users\el_ba\Documents\GitHub\HRdelay\V1\fov'

mkdir(fullfile(p.wd,'V1','fov'))
mkdir(fullfile(p.wd,'V1','fov'))
[Warning: Directory already exists.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('processFov', 'C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m', 21)" style="font-weight:bold">processFov</a> (<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',21,0)">line 21</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('doIt', 'C:\Users\el_ba\Documents\GitHub\HRdelay\doIt.m', 18)" style="font-weight:bold">doIt</a> (<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\doIt.m',18,0)">line 18</a>)] 
outDir
{Unrecognized function or variable 'outDir'.
} 
outDir = fullfile(p.wd,'V1','fov');
~exist(outDir,'dir')

ans =

  <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a>

   0

outDir = fullfile(p.wd,'V1','fov'); if ~exist(outDir,'dir'); mkdir(outDir); end
disp(['empiricalFov: saving to ' outDir])
empiricalFov: saving to C:\Users\el_ba\Documents\GitHub\HRdelay\V1\fov
areaAndFov = featSel_areaAndFov;
outFile = fullfile(p.wd,'V1','fov');
disp(['empiricalFov: saving to ' outDir])
empiricalFov: saving to C:\Users\el_ba\Documents\GitHub\HRdelay\V1\fov
outFile = fullfile(p.wd,'V1','fov.mat');
disp(['empiricalFov: saving to ' outDir])
empiricalFov: saving to C:\Users\el_ba\Documents\GitHub\HRdelay\V1\fov
save(outFile,'featSel_areaAndFov','cont','voxProp','pEmpirical')
p.figOption

ans = 

  <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> with fields:

      outDir: 'C:\Users\el_ba\Documents\GitHub\HRdelay\figures\2021-08-11'
     verbose: 0
        save: 1
     subjInd: 2
     sessInd: 1
     condInd: 1
    sliceInd: 7

outFile = fullfile(p.wd,'V1','fov.mat');
exist(outFile,'file')

ans =

     2

strcmp(doWhat,'run_forced')

ans =

  <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a>

   0

doWhat

doWhat =

    'run'

dbquit
doWhat = 'run';
p.featSel.fov.resFile = processFov(p,doWhat);
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('processFov')" style="font-weight:bold">processFov</a>
Too many input arguments.
} 
p.featSel.fov.resFile = processFov(p,doWhat);
02jp: loading responses
03sk: loading responses
04sp: loading responses
05bm: loading responses
06sb: loading responses
07bj: loading responses
responses loaded
-----------------------
empiricalFov: using data previously saved locally
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',42,1)">42  </a>for i = 1:length(fAll)
p.featSel.fov.resFile = processFov(p,doWhat);
02jp: loading responses
03sk: loading responses
04sp: loading responses
05bm: loading responses
06sb: loading responses
07bj: loading responses
responses loaded
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',14,1)">14  </a>outFile = fullfile(p.wd,'V1','fov.mat');
if system_dependent('IsDebugMode')==1, dbstep; end
outFile

outFile =

    'C:\Users\el_ba\Documents\GitHub\HRdelay\V1\fov.mat'

dbquit
p.featSel.fov.resFile = processFov(p,doWhat);
02jp: loading responses
03sk: loading responses
04sp: loading responses
05bm: loading responses
06sb: loading responses
07bj: loading responses
responses loaded
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',14,1)">14  </a>outFile = fullfile(p.wd,'V1','fov.mat');
dbquit
dbquit
doWhat = 'run';
p.featSel.fov.resFile = processFov(p,doWhat);
02jp: loading responses
03sk: loading responses
04sp: loading responses
05bm: loading responses
06sb: loading responses
07bj: loading responses
responses loaded
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',14,1)">14  </a>outFile = fullfile(p.wd,'data','V1','fov.mat');
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
-----------------------
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
empiricalFov: Computing
if system_dependent('IsDebugMode')==1, dbstep; end
flattening ecc distributions
preparing delay maps
02jp,sess1: refining fov contour
02jp,sess2: refining fov contour
03sk,sess1: refining fov contour
03sk,sess2: refining fov contour
04sp,sess1: refining fov contour
04sp,sess2: refining fov contour
05bm,sess1: refining fov contour
05bm,sess2: refining fov contour
06sb,sess1: refining fov contour
06sb,sess2: refining fov contour
07bj,sess1: refining fov contour
07bj,sess2: refining fov contour
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',23,1)">23  </a>            disp('empiricalFov: Saving')
if system_dependent('IsDebugMode')==1, dbstep; end
empiricalFov: Saving
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
empiricalFov: Saved to: C:\Users\el_ba\Documents\GitHub\HRdelay\data\V1\fov.mat
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
dbquit
doWhat = 'run';
p.featSel.fov.resFile = processFov(p,doWhat);
02jp: loading responses
03sk: loading responses
04sp: loading responses
05bm: loading responses
06sb: loading responses
07bj: loading responses
responses loaded
<a href="matlab: opentoline('C:\Users\el_ba\Documents\GitHub\HRdelay\processFov.m',14,1)">14  </a>outFile = fullfile(p.wd,'data','V1','fov.mat');
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
-----------------------
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
empiricalFov: using data previously saved locally
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
dbquit
dbquit
doIt
